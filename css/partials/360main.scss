////////////////////////////////////////////
///// 		360 CAROUSEL PLUGIN
///////////////////////////////////////////////
/// this file's CSS should not be compressed

////////////////////////////////////////////
// 		VARIABLES
////////////////////////////////////////////

// normally these variables would be in another file however this is for the plugin so they've been placed here

// the z-offset should be increased by -1000px for every 36 gallery items that exceeds 36... use Javascript
$transOriginZOffset: -2000px;
$viewPortHeight: 100vh;

////////////////////////////////////////////
// 		END VARIABLES
////////////////////////////////////////////


////////////////////////////////////////////
// 		IMPORTS
////////////////////////////////////////////

// the Font Awesome stylesheet must be imported
// this may require updating periodically
@import url(https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css);

////////////////////////////////////////////
// 		END IMPORTS
////////////////////////////////////////////


////////////////////////////////////////////
// 		CAROUSEL
////////////////////////////////////////////

section#carousel {
	// /* need to set a perspective on the parent of all elements and children here */
	perspective: 200px;
	background: #100000;
	// padding-top: 20%;
	/*margin-bottom: 3rem;*/
	// height:100vh;
	height:$viewPortHeight;
	// height:300px;
	// height: 50vh;
	overflow: hidden;

	position: relative;

	//flexbox parent
	//this is used to centre ul#spinner which has no dimensions, it is just a point on the page
	@include flexboxColumn1;
	// @include flexboxRow1;
	justify-content: center;
	align-content: center;
	align-items: center;

	// temporary margins
	// margin-top: 17%;
}

////////////////////////////////////////////
// 		END CAROUSEL
////////////////////////////////////////////


////////////////////////////////////////////
// 		FIGURE SPINNER
////////////////////////////////////////////

// NOTE:  
// Thursday, May 21, 2015 3:09 PM:  the wobbling occurs because the first image is where the origin point begins, once you rotate to another image that isn't the first, then when you rotate on the X axis the point of origin has changed

ul#spinner {
	transform-style: preserve-3d;
	// height: 300px;
	/*change the origin for the animation... The transform-origin CSS property lets you modify the origin for transformations of an element.  A -ve z-offset means into the page usually unless the element has already been rotated, while +ve means towards the user's eye. */
	/*the z-offset of the ul#spinner must match those of the img's within it*/
	transform-origin: 50% 50% $transOriginZOffset;
	// transition: 1s;
	@include transitionEffectAllEaseIn(1s);

	// USER SELECTABLE
	// change the plane of view so it seems like you're looking partially from the top at an angle... you must also add this to your Javascript otherwise it will be overwritten...
	// may mean I need to set this on the images?
	// we may have to manually translate ul#spinner x and y to the correct position
	// the translation seems to correct the wobbling
	transform: rotateY(0deg) rotateX(0deg) translateY(-6.5em) translateX(-9em);

	// disabling/enabling flexbox has no effect since elements are now absolute positioned
	// @include flexboxRow1;
	// flex-flow:row nowrap;
	// // flex-flow:row wrap;
	// justify-content:center;
	// align-content:center;
	// align-items:center;
	
	// make ul#spinner above the div.controlframe
	z-index: 5;
}

// ----------------------------------------
// IMAGES  ------------------
// ----------------------------------------

ul#spinner li {
	// width: 40%;
	max-width: 425px;
	// position: absolute;
	// background: #100000;
	// using absolute positioning here doesn't do anything
	// left: 30%;
	// transform-origin: 50% 50% -2000px;
	outline: 1px solid transparent;
}

ul#spinner img {
	// width: 40%;
	max-width: 425px;
	position: absolute;
	// background: #100000;
	// using absolute positioning here doesn't do anything
	// left: 30%;
	transform-origin: 50% 50% $transOriginZOffset;
	outline: 1px solid transparent;
}

// since we'll be using JS to set the rotateY of each image, this isn't necessary
// NOTE:  if using ul li then the nth-child must be placed on the li and not the img

ul#spinner li:nth-child(1) img {
	transform: rotateY(0deg);
}

ul#spinner li:nth-child(2) img {
	/*-ve degrees are counter clockwise*/
	transform: rotateY(-45deg);
}

ul#spinner li:nth-child(3) img {
	transform: rotateY(-90deg);
}

ul#spinner li:nth-child(4) img {
	transform: rotateY(-135deg);
}

ul#spinner li:nth-child(5) img {
	transform: rotateY(-180deg);
}

ul#spinner li:nth-child(6) img {
	transform: rotateY(-225deg);
}

ul#spinner li:nth-child(7) img {
	transform: rotateY(-270deg);
}

ul#spinner li:nth-child(8) img {
	transform: rotateY(-315deg);
}

// ul#spinner li:nth-child(9) img {
// 	transform: rotateY(-360deg);
// }

// /* you can only have a maximum of 360 degrees worth of images */

/*ul#spinner img:nth-child(9) {
	transform: rotateY(-360deg);
}*/


/*ul#spinner img:nth-child(10) {
	transform: rotateY(-405deg);
}

ul#spinner img:nth-child(11) {
	transform: rotateY(-450deg);
}*/

// ----------------------------------------
// END IMAGES  ------------------
// ----------------------------------------



////////////////////////////////////////////
// 		END FIGURE SPINNER
////////////////////////////////////////////

////////////////////////////////////////////
// 		CONTROLS
////////////////////////////////////////////

// ----------------------------------------
// Control Frame  ------------------
// ----------------------------------------
section#carousel .controlframe {
	width: 100%;
	position: absolute;
	top: 0;
	bottom:0;
	right:0;
	left:0;

	// we want the control frame horizontal to be over top of the #spinner in case images cross the buttons later... yet it must be below the vertical control frame
	z-index: 10;

	//flexbox parent
	@include flexboxColumn1;

	.controls span.fa {
		color: black;
		background: white;
		width: 2em;
		height: 2em;
		padding: 2%;
		border-radius: 50%;
		// margin-bottom: 25%;

		@include flexboxColumn1;
		justify-content: center;
		align-content: center;
		align-items: center;

		@include transitionEffectAllEaseIn(0.5s);

		&.fa-chevron-up {
			padding: 0 0 12% 4%;
			margin-top: 25%;
		}

		&.fa-chevron-down {
			padding: 0 0 2% 4%;
			margin-bottom: 25%;
		}

		&.fa-chevron-left {
			// background: blue;
			padding-right: 2.5%;
			margin-left: 2%;
		}

		&.fa-chevron-right {
			// background: green;
			padding-left: 2.5%;
			margin-right: 2%;
		}

	}

	.controls span.fa:hover {
		color: white;
		background: #2ecc71;
		cursor: pointer;
	}
}
// ----------------------------------------
// END Control Frame  ------------------
// ----------------------------------------



// ----------------------------------------
// VERTICAL CONTROLS (UP, DOWN)  ------------------
// ----------------------------------------
section#carousel .controls.vertical1, section#carousel .controls.vertical2 {

	// set a height on the verticals so that the buttons are pushed to the upper and lower edges... away from the centre
	height: $viewPortHeight/2;

	//flexbox parent
	@include flexboxRow1;
	flex-flow: row nowrap;
	justify-content: center;
	align-content: center;
}

section#carousel .controls.vertical1 {
	align-items: flex-start;
}

section#carousel .controls.vertical2 {
	align-items: flex-end;
}
// ----------------------------------------
// END VERTICAL CONTROLS (UP, DOWN)  ------------------
// ----------------------------------------

// ----------------------------------------
// HORIZONTAL CONTROLS (LEFT, RIGHT)  ------------------
// ----------------------------------------
section#carousel .controls.horizontal {

	width: 100%;

	//flexbox parent
	@include flexboxRow1;
	flex-flow: row nowrap;
	justify-content: center;
	align-content: center;

	div {
		flex: 1 50%;
	}
	
	div:nth-child(1) {
		//flexbox parent
		@include flexboxRow1;
		justify-content: flex-start;
		align-content: flex-start;
	}

	div:nth-child(2) {
		//flexbox parent
		@include flexboxRow1;
		justify-content: flex-end;
		align-content: flex-end;
	}
}
// ----------------------------------------
// END HORIZONTAL CONTROLS (LEFT, RIGHT)  ------------------
// ----------------------------------------


////////////////////////////////////////////
// 		END CONTROLS
////////////////////////////////////////////

////////////////////////////////////////////
// 		LARGE MODAL 1
////////////////////////////////////////////

.largeModal1 {
	color: white;

	position: absolute;
	$absoluteAnchorVal: 10%;
	top: $absoluteAnchorVal;
	bottom: $absoluteAnchorVal;
	right: $absoluteAnchorVal;
	left: $absoluteAnchorVal;

	// DEFAULT STATUS
	display:none;

}

.largeModal1 .imgFrame img {
	max-width: 100%;
	border-radius: 10px;
}

.largeModal1 .caption {
	text-align: center;
	@include sectionPadding041515(1%,1%);

	//flexbox parent
	@include flexboxColumn1;

}

////////////////////////////////////////////
// 		END LARGE MODAL 1
////////////////////////////////////////////
